GPU Device 0: "GeForce GTX 680" with compute capability 3.0

Directory ../resource/small_london with 3398 files initialized.
Executing GPU Version.
Initializing Matrix.
Comparing 680 images with OpenCV_GPU...
Initialization of T done. 
************** Iteration 0 **************
[ESTIMATOR]: Determine kBest confidence measures on GPU (column-wise).
[ESTIMATOR]: Device index arrays with size 680 allocated.
time Solving: 3990
After solving [680 of 680 NO ERROR]! Going to sort with thrust
Comparing 680 images with OpenCV_GPU...
************** Iteration 1 **************
[ESTIMATOR]: Determine kBest confidence measures on GPU (column-wise).
time Solving: 5560
After solving [680 of 680 NO ERROR]! Going to sort with thrust
Comparing 680 images with OpenCV_GPU...
************** Iteration 2 **************
[ESTIMATOR]: Determine kBest confidence measures on GPU (column-wise).
time Solving: 6610
After solving [680 of 680 NO ERROR]! Going to sort with thrust
Comparing 680 images with OpenCV_GPU...
************** Iteration 3 **************
[ESTIMATOR]: Determine kBest confidence measures on GPU (column-wise).
time Solving: 7330
After solving [680 of 680 NO ERROR]! Going to sort with thrust
Comparing 680 images with OpenCV_GPU...
************** Iteration 4 **************
[ESTIMATOR]: Determine kBest confidence measures on GPU (column-wise).
time Solving: 7780
After solving [680 of 680 NO ERROR]! Going to sort with thrust
Comparing 680 images with OpenCV_GPU...
************** Iteration 5 **************
[ESTIMATOR]: Determine kBest confidence measures on GPU (column-wise).
time Solving: 7970
After solving [680 of 680 NO ERROR]! Going to sort with thrust
Comparing 680 images with OpenCV_GPU...
************** Iteration 6 **************
[ESTIMATOR]: Determine kBest confidence measures on GPU (column-wise).
time Solving: 7980
After solving [680 of 680 NO ERROR]! Going to sort with thrust
Comparing 680 images with OpenCV_GPU...
************** Iteration 7 **************
[ESTIMATOR]: Determine kBest confidence measures on GPU (column-wise).
time Solving: 7900
After solving [680 of 680 NO ERROR]! Going to sort with thrust
Comparing 680 images with OpenCV_GPU...
************** Iteration 8 **************
[ESTIMATOR]: Determine kBest confidence measures on GPU (column-wise).
time Solving: 7900
After solving [680 of 680 NO ERROR]! Going to sort with thrust
Comparing 680 images with OpenCV_GPU...
************** Iteration 9 **************
[ESTIMATOR]: Determine kBest confidence measures on GPU (column-wise).
time Solving: 7900
After solving [680 of 680 NO ERROR]! Going to sort with thrust
Comparing 680 images with OpenCV_GPU...
************** Iteration 10 **************
[ESTIMATOR]: Determine kBest confidence measures on GPU (column-wise).
time Solving: 7940
After solving [680 of 680 NO ERROR]! Going to sort with thrust
Comparing 680 images with OpenCV_GPU...
************** Iteration 11 **************
[ESTIMATOR]: Determine kBest confidence measures on GPU (column-wise).
time Solving: 7830
After solving [680 of 680 NO ERROR]! Going to sort with thrust
Comparing 680 images with OpenCV_GPU...
************** Iteration 12 **************
[ESTIMATOR]: Determine kBest confidence measures on GPU (column-wise).
time Solving: 7830
After solving [680 of 680 NO ERROR]! Going to sort with thrust
Comparing 680 images with OpenCV_GPU...
************** Iteration 13 **************
[ESTIMATOR]: Determine kBest confidence measures on GPU (column-wise).
time Solving: 7870
After solving [680 of 680 NO ERROR]! Going to sort with thrust
Comparing 680 images with OpenCV_GPU...
************** Iteration 14 **************
[ESTIMATOR]: Determine kBest confidence measures on GPU (column-wise).
time Solving: 7840
After solving [680 of 680 NO ERROR]! Going to sort with thrust
Comparing 680 images with OpenCV_GPU...
************** Iteration 15 **************
[ESTIMATOR]: Determine kBest confidence measures on GPU (column-wise).
time Solving: 7910
After solving [680 of 680 NO ERROR]! Going to sort with thrust
Comparing 680 images with OpenCV_GPU...
************** Iteration 16 **************
[ESTIMATOR]: Determine kBest confidence measures on GPU (column-wise).
time Solving: 7920
After solving [680 of 680 NO ERROR]! Going to sort with thrust
Comparing 680 images with OpenCV_GPU...
************** Iteration 17 **************
[ESTIMATOR]: Determine kBest confidence measures on GPU (column-wise).
time Solving: 7780
After solving [680 of 680 NO ERROR]! Going to sort with thrust
Comparing 680 images with OpenCV_GPU...
************** Iteration 18 **************
[ESTIMATOR]: Determine kBest confidence measures on GPU (column-wise).
time Solving: 7900
After solving [680 of 680 NO ERROR]! Going to sort with thrust
Comparing 680 images with OpenCV_GPU...
************** Iteration 19 **************
[ESTIMATOR]: Determine kBest confidence measures on GPU (column-wise).
time Solving: 7870
After solving [680 of 680 NO ERROR]! Going to sort with thrust
Comparing 680 images with OpenCV_GPU...
************** Iteration 20 **************
[ESTIMATOR]: Determine kBest confidence measures on GPU (column-wise).
time Solving: 7900
After solving [680 of 680 NO ERROR]! Going to sort with thrust
Comparing 680 images with OpenCV_GPU...
************** Iteration 21 **************
[ESTIMATOR]: Determine kBest confidence measures on GPU (column-wise).
time Solving: 7950
After solving [680 of 680 NO ERROR]! Going to sort with thrust
Comparing 680 images with OpenCV_GPU...
************** Iteration 22 **************
[ESTIMATOR]: Determine kBest confidence measures on GPU (column-wise).
time Solving: 7940
After solving [680 of 680 NO ERROR]! Going to sort with thrust
Comparing 680 images with OpenCV_GPU...
************** Iteration 23 **************
[ESTIMATOR]: Determine kBest confidence measures on GPU (column-wise).
time Solving: 7920
After solving [680 of 680 NO ERROR]! Going to sort with thrust
Comparing 680 images with OpenCV_GPU...
************** Iteration 24 **************
[ESTIMATOR]: Determine kBest confidence measures on GPU (column-wise).
time Solving: 7880
After solving [680 of 680 NO ERROR]! Going to sort with thrust
Comparing 680 images with OpenCV_GPU...
************** Iteration 25 **************
[ESTIMATOR]: Determine kBest confidence measures on GPU (column-wise).
time Solving: 7890
After solving [680 of 680 NO ERROR]! Going to sort with thrust
Comparing 680 images with OpenCV_GPU...
************** Iteration 26 **************
[ESTIMATOR]: Determine kBest confidence measures on GPU (column-wise).
time Solving: 7960
After solving [680 of 680 NO ERROR]! Going to sort with thrust
Comparing 680 images with OpenCV_GPU...
************** Iteration 27 **************
[ESTIMATOR]: Determine kBest confidence measures on GPU (column-wise).
time Solving: 7840
After solving [680 of 680 NO ERROR]! Going to sort with thrust
Comparing 680 images with OpenCV_GPU...
************** Iteration 28 **************
[ESTIMATOR]: Determine kBest confidence measures on GPU (column-wise).
time Solving: 7810
After solving [680 of 680 NO ERROR]! Going to sort with thrust
Comparing 680 images with OpenCV_GPU...
************** Iteration 29 **************
[ESTIMATOR]: Determine kBest confidence measures on GPU (column-wise).
time Solving: 7870
After solving [680 of 680 NO ERROR]! Going to sort with thrust
Comparing 680 images with OpenCV_GPU...
************** Iteration 30 **************
[ESTIMATOR]: Determine kBest confidence measures on GPU (column-wise).
time Solving: 7930
After solving [680 of 680 NO ERROR]! Going to sort with thrust
Comparing 680 images with OpenCV_GPU...
************** Iteration 31 **************
[ESTIMATOR]: Determine kBest confidence measures on GPU (column-wise).
time Solving: 7960
After solving [680 of 680 NO ERROR]! Going to sort with thrust
Comparing 680 images with OpenCV_GPU...
************** Iteration 32 **************
[ESTIMATOR]: Determine kBest confidence measures on GPU (column-wise).
time Solving: 7970
After solving [680 of 680 NO ERROR]! Going to sort with thrust
Comparing 680 images with OpenCV_GPU...
************** Iteration 33 **************
[ESTIMATOR]: Determine kBest confidence measures on GPU (column-wise).
time Solving: 7800
After solving [680 of 680 NO ERROR]! Going to sort with thrust
Comparing 680 images with OpenCV_GPU...
************** Iteration 34 **************
[ESTIMATOR]: Determine kBest confidence measures on GPU (column-wise).
time Solving: 7920
After solving [680 of 680 NO ERROR]! Going to sort with thrust
Comparing 680 images with OpenCV_GPU...
************** Iteration 35 **************
[ESTIMATOR]: Determine kBest confidence measures on GPU (column-wise).
time Solving: 7970
After solving [680 of 680 NO ERROR]! Going to sort with thrust
Comparing 680 images with OpenCV_GPU...
************** Iteration 36 **************
[ESTIMATOR]: Determine kBest confidence measures on GPU (column-wise).
time Solving: 7910
After solving [680 of 680 NO ERROR]! Going to sort with thrust
Comparing 680 images with OpenCV_GPU...
************** Iteration 37 **************
[ESTIMATOR]: Determine kBest confidence measures on GPU (column-wise).
time Solving: 7850
After solving [680 of 680 NO ERROR]! Going to sort with thrust
Comparing 680 images with OpenCV_GPU...
************** Iteration 38 **************
[ESTIMATOR]: Determine kBest confidence measures on GPU (column-wise).
time Solving: 7890
After solving [680 of 680 NO ERROR]! Going to sort with thrust
Comparing 680 images with OpenCV_GPU...
************** Iteration 39 **************
[ESTIMATOR]: Determine kBest confidence measures on GPU (column-wise).
time Solving: 7880
After solving [680 of 680 NO ERROR]! Going to sort with thrust
Comparing 680 images with OpenCV_GPU...
************** Iteration 40 **************
[ESTIMATOR]: Determine kBest confidence measures on GPU (column-wise).
time Solving: 7940
After solving [680 of 680 NO ERROR]! Going to sort with thrust
Comparing 680 images with OpenCV_GPU...
************** Iteration 41 **************
[ESTIMATOR]: Determine kBest confidence measures on GPU (column-wise).
time Solving: 7890
After solving [680 of 680 NO ERROR]! Going to sort with thrust
Comparing 680 images with OpenCV_GPU...
************** Iteration 42 **************
[ESTIMATOR]: Determine kBest confidence measures on GPU (column-wise).
time Solving: 7910
After solving [680 of 680 NO ERROR]! Going to sort with thrust
Comparing 680 images with OpenCV_GPU...
************** Iteration 43 **************
[ESTIMATOR]: Determine kBest confidence measures on GPU (column-wise).
time Solving: 7910
After solving [680 of 680 NO ERROR]! Going to sort with thrust
Comparing 680 images with OpenCV_GPU...
************** Iteration 44 **************
[ESTIMATOR]: Determine kBest confidence measures on GPU (column-wise).
time Solving: 7920
After solving [680 of 680 NO ERROR]! Going to sort with thrust
Comparing 680 images with OpenCV_GPU...
************** Iteration 45 **************
[ESTIMATOR]: Determine kBest confidence measures on GPU (column-wise).
time Solving: 7860
After solving [680 of 680 NO ERROR]! Going to sort with thrust
Comparing 680 images with OpenCV_GPU...
************** Iteration 46 **************
[ESTIMATOR]: Determine kBest confidence measures on GPU (column-wise).
time Solving: 7950
After solving [680 of 680 NO ERROR]! Going to sort with thrust
Comparing 680 images with OpenCV_GPU...
************** Iteration 47 **************
[ESTIMATOR]: Determine kBest confidence measures on GPU (column-wise).
time Solving: 7930
After solving [680 of 680 NO ERROR]! Going to sort with thrust
Comparing 680 images with OpenCV_GPU...
************** Iteration 48 **************
[ESTIMATOR]: Determine kBest confidence measures on GPU (column-wise).
time Solving: 7920
After solving [680 of 680 NO ERROR]! Going to sort with thrust
Comparing 680 images with OpenCV_GPU...
************** Iteration 49 **************
[ESTIMATOR]: Determine kBest confidence measures on GPU (column-wise).
time Solving: 8020
After solving [680 of 680 NO ERROR]! Going to sort with thrust
Comparing 680 images with OpenCV_GPU...
